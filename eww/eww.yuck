; -------------------------
; ------- Variables -------
; -------------------------

(defvar previous_volume 0)
(defvar volume_revealed false)
(defvar power_revealed false)
(defpoll volume_percentage :interval "1s" "~/.config/eww/scripts/volume.sh -g")
(defpoll volume_icon :interval "1s" "~/.config/eww/scripts/volume.sh -i")
(defpoll wifi_name :interval "1m" "iwctl station wlan0 show | grep \"Connected network\" | awk '{ print $3}'")
(defpoll wifi_icon :interval "5s" "sh ~/.config/eww/scripts/wifi.sh")
(defpoll clock :interval "3s"
  "date \"+%_I:%M %p | %B $(date '+%_d' | xargs), %Y\" | xargs"
)

(deflisten window :initial "" "sh ~/.config/eww/scripts/window.sh")

; -------------------------
; -------- Widgets --------
; -------------------------

(defwidget separator []
  (label :class "separator" :text "|")
)

(defwidget volume []
  (box :tooltip "Volume: ${volume_percentage}%"
    (eventbox :onhover "~/.bin/eww update volume_revealed=true" :onhoverlost "~/.bin/eww update volume_revealed=false"
      (box :space-evenly false :spacing 6
        (revealer :transition "slideleft" :reveal volume_revealed
          (scale :min 0 :max 101 :value volume_percentage :onchange "~/.config/eww/scripts/volume.sh -s {}")
        )
        
        (button :class "icon" :onclick "~/.config/eww/scripts/volume.sh -m" volume_icon)
      )
    )
  )
)

(defwidget wifi []
  (box :tooltip "Connected to ${wifi_name}"
    (label :class "icon" :text wifi_icon)
  )
)

(defwidget power []
  (eventbox :onhover "~/.bin/eww update power_revealed=true" :onhoverlost "~/.bin/eww update power_revealed=false"
    (box :space-evenly false :spacing 6
      (revealer :transition "slideleft" :reveal power_revealed
        (box :orientation "h" :spacing 6
          (button :class "icon" :onclick "hyprctl dispatch exit" :tooltip "Logout" "")
          (button :class "icon" :onclick "systemctl reboot" :tooltip "Restart" "")
          (button :class "icon" :onclick "systemctl poweroff" :tooltip "Shutdown" "")
        )
      )
      
      (button :class "icon" :onclick "systemctl suspend" :tooltip "Sleep" "")
    )
  )
)

(defwidget sys_utils []
  (box :orientation "h" :spacing 10 :space-evenly false
    (volume)
    (wifi)
    (power)
  )
)

(defwidget tray []
  (systray :pack-direction "ltr")
)

; -------------------------
; ------- Templates -------
; -------------------------

(defwidget start []
  (box :orientation "h" :halign "start"
    {window}
  )
)

(defwidget center []
  (box :orientation "h" :halign "center"
    {clock}
  )
)

(defwidget end []
  (box :orientation "h" :halign "end" :space-evenly false :spacing 0
    (tray)
    (separator)
    (sys_utils)
  )
)

(defwidget topbar []
  (centerbox :class "topbar" :orientation "h"
    (start)
    (center)
    (end)
  )
)

; -------------------------
; --------- Bars ----------
; -------------------------

(defwindow topbar-left
  :monitor 0
  :exclusive true
  :focusable false
  :stacking "fg"
  :namespace "topbar"
  
  :geometry (geometry
    :x "0%"
    :y "20px"
    :width "98%"
    :height "40px"
    :anchor "top center"
  )
  
  (topbar)
)

(defwindow topbar-right
  :monitor 1
  :exclusive true
  :focusable false
  :stacking "fg"
  :namespace "topbar"
  
  :geometry (geometry
    :x "0%"
    :y "20px"
    :width "98%"
    :height "40px"
    :anchor "top center"
  )
  
  (topbar)
)
